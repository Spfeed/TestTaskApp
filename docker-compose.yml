version: "3.8"

services:
  backend:
    build:
      context: ./backend
    image: backend-app
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/movies_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    image: frontend-app
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: movies_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - backend
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3001"
    environment:
      - GF_SERVER_HTTP_PORT=3001
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana/provisioning/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    networks:
      - app-network

volumes:
  postgres_data:
  prometheus_config:
  grafana_data:

networks:
  app-network:
    driver: bridge
